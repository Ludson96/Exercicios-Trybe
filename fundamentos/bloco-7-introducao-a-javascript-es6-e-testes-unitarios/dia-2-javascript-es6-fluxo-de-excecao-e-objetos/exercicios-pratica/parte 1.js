// // 1 ðŸš€ - Crie um erro personalizado que serÃ¡ chamado se a pessoa usuÃ¡ria digitar apenas um nÃºmero.
// // 2 ðŸš€ - Agora adicione uma outra exceÃ§Ã£o, caso a pessoa usuÃ¡ria digite um valor que nÃ£o seja numÃ©rico
// // 3 ðŸš€ - VocÃª se lembrou de limpar os inputs apÃ³s o clique do botÃ£o? Teve que repetir cÃ³digo para isso? Que tal refatorar sua funÃ§Ã£o utilizando o finally?
function verifyIsNumber(value1, value2) {
  if (value1 === '' || value2 === '') {
    throw new Error('infome os dois nÃºmeros');
  }
}

function nan(value1, value2) {
  if (isNaN(value1) || isNaN(value2)){
    throw new Error('Digite um nÃºmero');
  }
}

function sum() {
  try {
    const value1 = document.getElementById('value1').value;
    const value2 = document.getElementById('value2').value;
    verifyIsNumber(value1, value2);
    nan(value1, value2);
    const result = parseInt(value1) + parseInt(value2);
    document.getElementById('result').innerHTML = `Resultado: ${result}`;
  } catch (error) {
    document.getElementById('result').innerHTML = `Erro: ${error.message}`;
  } finally {
    document.getElementById('value1').value = '';
    document.getElementById('value2').value = '';
  }
}
window.onload = () => {
  const button = document.getElementById('button');
  button.addEventListener('click', sum);
}
